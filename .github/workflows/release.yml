name: release

on:
  push:
    tags: ["v*.*.*"]

jobs:
  get-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
    steps:
      - uses: actions/checkout@v2
      - id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> "$GITHUB_OUTPUT"
  build:
    env:
      BIN_NAME: ${{ needs.get-tag.outputs.tag }}.${{ matrix.platform.goos }}-${{ matrix.platform.goarch }}
    needs: [get-tag]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - { goos: darwin, goarch: amd64 }
          - { goos: linux, goarch: amd64 }
          - { goos: windows, goarch: amd64 }
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup go
        uses: actions/setup-go@v1
        with:
          go-version: ^1.0
      - name: Set binary name
        id: binary_name
        run: |
          echo "BIN_NAME=gcppromd-${{ needs.get-tag.outputs.tag }}.${{ matrix.platform.goos }}-${{ matrix.platform.goarch }}" >> $GITHUB_ENV
      - run: >-
          CGO_ENABLED=0 GOOS=${{ matrix.platform.goos }}
          GOARCH=${{ matrix.platform.goarch }}
          go build -ldflags "-s -w" -o ${{ env.BIN_NAME }} ./cmd/gcppromd &&
          shasum -a 256 ${{ env.BIN_NAME }} > ${{ env.BIN_NAME }}.sha256
      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: binary.${{ env.BIN_NAME }}
          path: |
            ${{ env.BIN_NAME }}
            ${{ env.BIN_NAME }}.sha256
          if-no-files-found: error
  release:
    needs: [get-tag, build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          path: .
      # git fetch --tags --force is required because GitHub checkout action doesn't seems to preserve the tag annotation.
      - name: Retrive release message
        run: |
          echo 'RELEASE_MSG<<EOF' >> $GITHUB_ENV
          git fetch --tags --force && git tag -l --format='%(contents)' ${{ needs.get-tag.outputs.tag }} >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          body: ${{ env.RELEASE_MSG }}
          files: |
            binary.*/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
